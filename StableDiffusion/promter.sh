#!/bin/bash
# generated by deepseek
# Define color constants using ASCII codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Define questions and suggestions
questions=(
    "Describe in a sentence your main subject"
    "Describe the action the subject is doing, the manner it is done, the secondary characteristics of your subject"
    "Describe the overall emotion of the image"
    "describe the style :"
    "Choose magic words : "
)

subjects_suggestions=(
    "A cat" 
    "A mountain"
    "A city"
    "A model"
    "A landscape"
    "A black hole"
)

actions_suggestions=(
    "is leisurely sunbathing"
    "reaches the sky in an ominous way"
    "spreads in a luxuriant valley"
    # Add more as needed
)

styles_suggestions=(
    "Polaroid" 
    "Tilt-Shift"
    "Product Shot"
    "Long Exposure"
    "Portrait"
    # ... all other style suggestions
)

emotions_list=(
    "Joyful" 
    "Hopeful"
    "Peaceful"
    "Depressing"
    "Excited"
    # Add more as needed
)

magic_words_suggestions=(
    "HDR, UHD, 64K"
    "Highly detailed"
    "Studio lighting"
    "Professional"
    "Trending on artstation"
    # Add more as needed
)

# Function to display questions with suggestions and get user input
get_input() {
    local question=$1
    local suggestions=("${!2}")
    local index=$3

    echo -e "${BLUE}Question $index:${NC}\n${YELLOW}$question${NC}"
    
    if [ ${#suggestions[@]} -gt 0 ]; then
        echo -e "Possible suggestions:"
        for i in "${!suggestions[@]}"; do
            echo -e " $(($i+1)). ${suggestions[$i]}"
        done
    fi

    while true; do
        read -p $'\nEnter your choice or type a new value (press Enter to input custom): ' input
        
        # Check if numeric input is within range of suggestions
        if [ "${input}" != "" ] && [ "${input}" == "${input//[^0-9]/}" ]; then
            num=$input
            if [ "$num" -ge 1 ] && [ "$num" -le ${#suggestions[@]} ]; then
                echo -e "\nYou chose: ${suggestions[$((num-1))]}"
                break
            fi
        fi
        
        # If no number or out of range, treat as custom input
        break
    done

    echo "${input:-${suggestions[0]}}"
}

# Main script execution
responses=()

for i in {0..4}; do
    case $i in
        0) suggestions=subjects_suggestions ;;
        1) suggestions=actions_suggestions ;;
        2) suggestions=emotions_list ;;
        3) suggestions=styles_suggestions ;;
        4) suggestions=magic_words_suggestions ;;
    esac
    
    response=$(get_input "${questions[$i]}" "${suggestions[@]}" $i)
    responses+=("$response")
done

# Concatenate results
result=$(IFS=\| ; echo "${responses[*]}")

echo -e "\n${GREEN}Final concatenated result:${NC}\n$result"